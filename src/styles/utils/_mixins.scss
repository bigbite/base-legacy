/*--------------------------------------------------*\
  Utils/Mixins
\*--------------------------------------------------*/

/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
@mixin font-size($font-size, $line-height: true){
  font-size: $font-size;
  font-size: ($font-size / $base-font-size)*1rem;
  @if $line-height == true {
    line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
  }
}


/**
 * Style any number of headings in one fell swoop, e.g.:
 *
   .foo {
      @include headings(1, 3) {
        color: #BADA55;
      }
    }
*
 * Credit: @csswizardry, @lar_zzz, @paranoida, @rowanmanning and @thierrylemoulec.
 */
@mixin headings($from: 1, $to: 6){
  %base-heading {
    @content
  }

  @if $from >= 1 and $to <= 6{
    @for $i from $from through $to{
      h#{$i}{
        @extend %base-heading;
      }
    }
  }
}


/**
 * Strip Units
 */
@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}


/**
 * Omega reset for Neat
 * http://joshfry.me/notes/omega-reset-for-bourbon-neat/
 */
@mixin omega-reset($nth) {
  &:nth-child(#{$nth}) { margin-right: flex-gutter(); }
  &:nth-child(#{$nth}+1) { clear: none }
}


/**
 * Rem calc with fallback:
 *
   `@include rem(margin-bottom, 10px);`
 *
 * Credit: https://github.com/bitmanic/rem
 */
@mixin rem-calc($property, $px-values) {

  // Convert the baseline into rems
  $baseline-rem: $base-font-size / 1rem * 1;

  // Print the first line in pixel values
  #{$property}: $px-values;

  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem;
  } @else {

    // Create an empty list that we can dump values into
    $rem-values: ();
    @each $value in $px-values {

      // If the value is zero or not a number, return it
      @if $value == 0 or type-of( $value ) != "number" {
        $rem-values: append($rem-values, $value); }
      @else {
        $rem-values: append($rem-values, $value / $baseline-rem);
      }
    }

    // Return the property and its list of converted values
    #{$property}: $rem-values;
  }
}
